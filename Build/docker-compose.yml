version: '3.9'

networks:
  api:
    driver: 'bridge'

services:
  nginx:
    image: nginx:latest
    volumes:
      - './Docker/nginx/conf.d:/etc/nginx/conf.d'
      - '../Source/public:/var/www/html/public'
    ports:
      - '8080:80'
    networks:
      - api
    links:
      - 'php:php'
    depends_on:
      - php
    restart: always

  php:
    build:
      context: './Docker/php'
    command: 'make docker_init'
    volumes:
      - '../Source/:/var/www/html/'
    working_dir: '/var/www/html/'
    user: '1000:1000'
    links:
      - 'db:db'
    networks:
      - api
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_TYPE: pgsql
      DB_HOST: db
      DB_NAME: database
      DB_USERNAME: postgres
      DB_PASSWORD: root

  db:
    image: postgres:latest
    networks:
      - api
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: database
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      timeout: 5s
      retries: 20

  adminer:
    image: adminer:latest
    ports:
      - '8089:8080'
    restart: always
    networks:
      - api